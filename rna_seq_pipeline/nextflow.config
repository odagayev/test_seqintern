params {
    case_samples = 'path/to/case_samples/*'
    control_samples = 'path/to/control_samples/*'
    reference_genome = 'path/to/reference/genome'
    gtf_file = 'path/to/annotation.gtf'
    outdir = 'results'
}

process {
    withName: fastqc {
        container = 'biocontainers/fastqc:v0.11.9_cv7'
    }
    withName: alignReads {
        container = 'biocontainers/hisat2:v2.2.1_cv1'
    }
    withName: quantifyExpression {
        container = 'biocontainers/subread:v2.0.1_cv1'
    }
    withName: differentialExpression {
        container = 'bioconductor/de2:v1.30.1'
    }
}

workflow {
    main {
        case_samples = Channel.fromPath(params.case_samples)
        control_samples = Channel.fromPath(params.control_samples)

        case_samples
            | fastqc
            | alignReads
            | quantifyExpression
            | set { case_counts }

        control_samples
            | fastqc
            | alignReads
            | quantifyExpression
            | set { control_counts }

        differentialExpression(case_counts, control_counts)
    }
}